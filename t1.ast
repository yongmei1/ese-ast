TranslationUnitDecl 0x2cbb270 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2cbb768 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2cbb4c0 '__int128'
|-TypedefDecl 0x2cbb7c8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2cbb4e0 'unsigned __int128'
|-TypedefDecl 0x2cbb858 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2cbb820 'char *'
|   `-BuiltinType 0x2cbb300 'char'
|-TypedefDecl 0x2cbbb08 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x2cbbab0 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x2cbb930 'struct __va_list_tag'
|     `-Record 0x2cbb8a8 '__va_list_tag'
`-FunctionDecl 0x2cbbba8 </home/paul/clang-ast/t1.c:1:1, line:7:1> line:1:1 ggg 'int ()'
  `-CompoundStmt 0x2d07438 <col:6, line:7:1>
    |-DeclStmt 0x2cbbd88 <line:2:1, col:9>
    | |-VarDecl 0x2cbbca0 <col:1, col:5> col:5 used y 'int'
    | `-VarDecl 0x2cbbd10 <col:1, col:7> col:7 used y1 'int'
    |-BinaryOperator 0x2cbbde8 <line:3:1, col:3> 'int' '='
    | |-DeclRefExpr 0x2cbbda0 <col:1> 'int' lvalue Var 0x2cbbca0 'y' 'int'
    | `-IntegerLiteral 0x2cbbdc8 <col:3> 'int' 4
    |-BinaryOperator 0x2cbbec0 <line:4:1, col:6> 'int' '='
    | |-DeclRefExpr 0x2cbbe10 <col:1> 'int' lvalue Var 0x2cbbd10 'y1' 'int'
    | `-BinaryOperator 0x2cbbe98 <col:4, col:6> 'int' '+'
    |   |-IntegerLiteral 0x2cbbe38 <col:4> 'int' 6
    |   `-ImplicitCastExpr 0x2cbbe80 <col:6> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x2cbbe58 <col:6> 'int' lvalue Var 0x2cbbca0 'y' 'int'
    `-BinaryOperator 0x2d07410 <line:6:1, col:14> 'int' '='
      |-DeclRefExpr 0x2cbbee8 <col:1> 'int' lvalue Var 0x2cbbca0 'y' 'int'
      `-BinaryOperator 0x2d073e8 <col:3, col:14> 'int' '-'
        |-ParenExpr 0x2d07340 <col:3, col:8> 'int'
        | `-BinaryOperator 0x2cbbf70 <col:4, col:7> 'int' '*'
        |   |-ImplicitCastExpr 0x2cbbf58 <col:4> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x2cbbf10 <col:4> 'int' lvalue Var 0x2cbbd10 'y1' 'int'
        |   `-IntegerLiteral 0x2cbbf38 <col:7> 'int' 8
        `-ParenExpr 0x2d073c8 <col:10, col:14> 'int'
          `-BinaryOperator 0x2d073a0 <col:11, col:13> 'int' '+'
            |-IntegerLiteral 0x2d07360 <col:11> 'int' 9
            `-IntegerLiteral 0x2d07380 <col:13> 'int' 8
